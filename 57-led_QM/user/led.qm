<?xml version="1.0" encoding="UTF-8"?>
<model version="5.1.4" links="0">
 <framework name="qpc"/>
 <package name="SMs" stereotype="0x02">
  <class name="sm_led_t" superclass="qpc::QActive">
   <attribute name="status" type="bool" visibility="0x00" properties="0x00"/>
   <statechart properties="0x01">
    <initial target="../1">
     <action>// 事件的订阅
QActive_subscribe(&amp;me-&gt;super, Evt_LedOnOff_SIG);</action>
     <initial_glyph conn="7,4,4,0,4">
      <action box="0,0,10,2"/>
     </initial_glyph>
    </initial>
    <state name="off">
     <entry>// 关闭LED灯
led_set_status(Device_Led1, false);
led_set_status(Device_Led2, false);
led_set_status(Device_Led3, false);
led_set_status(Device_Led4, false);</entry>
     <tran trig="Evt_LedOnOff" target="../../2">
      <tran_glyph conn="6,18,2,0,6">
       <action box="0,2,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="4,8,16,10">
      <entry box="1,2,6,2"/>
     </state_glyph>
    </state>
    <state name="on">
     <entry>// 打开LED灯
led_set_status(Device_Led1, true);
led_set_status(Device_Led2, true);
led_set_status(Device_Led3, true);
led_set_status(Device_Led4, true);</entry>
     <tran trig="Evt_LedOnOff" target="../../1">
      <tran_glyph conn="16,24,0,2,-6">
       <action box="0,-4,10,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="4,24,16,10">
      <entry box="1,2,6,2"/>
     </state_glyph>
    </state>
    <state_diagram size="80,50"/>
   </statechart>
  </class>
 </package>
 <directory name=".">
  <file name="sm_led_qm.c" codec="UTF-8">
   <text>#include &quot;qpc.h&quot;
#include &quot;led.h&quot;
#include &quot;event_def.h&quot;
#include &quot;sm_def.h&quot;

Q_DEFINE_THIS_MODULE(&quot;SmLed&quot;)

$declare${SMs::sm_led_t}

static sm_led_t sm_led;

void sm_led_init(void)
{
    sm_led_t *me = &amp;sm_led;

    // 活动对象的构建
    QActive_ctor(&amp;me-&gt;super, Q_STATE_CAST(&amp;sm_led_t_initial));
    // 活动对象的启动
    static QEvt const *e_queue[SM_LED_QUEUE_LENGTH];
    QACTIVE_START(&amp;me-&gt;super,
                  SmPrio_Led,
                  e_queue, SM_LED_QUEUE_LENGTH,
                  (void *)0, 0U,
                  (void *)0);
}

$define${SMs::sm_led_t}
</text>
  </file>
  <file name="sm_led_qm.h" codec="UTF-8">
   <text>#ifndef SM_LED_H
#define SM_LED_H

void sm_led_init(void);

#endif
</text>
  </file>
 </directory>
</model>
